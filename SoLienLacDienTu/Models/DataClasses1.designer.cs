#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoLienLacDienTu.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SoLienLacDT")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertThongBaoChung(ThongBaoChung instance);
    partial void UpdateThongBaoChung(ThongBaoChung instance);
    partial void DeleteThongBaoChung(ThongBaoChung instance);
    partial void InsertChiTietHocPhi(ChiTietHocPhi instance);
    partial void UpdateChiTietHocPhi(ChiTietHocPhi instance);
    partial void DeleteChiTietHocPhi(ChiTietHocPhi instance);
    partial void InsertDiem(Diem instance);
    partial void UpdateDiem(Diem instance);
    partial void DeleteDiem(Diem instance);
    partial void InsertDiemCT(DiemCT instance);
    partial void UpdateDiemCT(DiemCT instance);
    partial void DeleteDiemCT(DiemCT instance);
    partial void InsertGiangVien(GiangVien instance);
    partial void UpdateGiangVien(GiangVien instance);
    partial void DeleteGiangVien(GiangVien instance);
    partial void InsertGiangVien_Nganh(GiangVien_Nganh instance);
    partial void UpdateGiangVien_Nganh(GiangVien_Nganh instance);
    partial void DeleteGiangVien_Nganh(GiangVien_Nganh instance);
    partial void InsertLichThi(LichThi instance);
    partial void UpdateLichThi(LichThi instance);
    partial void DeleteLichThi(LichThi instance);
    partial void InsertLop(Lop instance);
    partial void UpdateLop(Lop instance);
    partial void DeleteLop(Lop instance);
    partial void InsertLopMon(LopMon instance);
    partial void UpdateLopMon(LopMon instance);
    partial void DeleteLopMon(LopMon instance);
    partial void InsertMonHoc(MonHoc instance);
    partial void UpdateMonHoc(MonHoc instance);
    partial void DeleteMonHoc(MonHoc instance);
    partial void InsertNganh(Nganh instance);
    partial void UpdateNganh(Nganh instance);
    partial void DeleteNganh(Nganh instance);
    partial void InsertPH(PH instance);
    partial void UpdatePH(PH instance);
    partial void DeletePH(PH instance);
    partial void InsertSinhVien(SinhVien instance);
    partial void UpdateSinhVien(SinhVien instance);
    partial void DeleteSinhVien(SinhVien instance);
    partial void InsertSinhVien_LopMon(SinhVien_LopMon instance);
    partial void UpdateSinhVien_LopMon(SinhVien_LopMon instance);
    partial void DeleteSinhVien_LopMon(SinhVien_LopMon instance);
    partial void InsertSV_MON(SV_MON instance);
    partial void UpdateSV_MON(SV_MON instance);
    partial void DeleteSV_MON(SV_MON instance);
    partial void InsertThoiKhoaBieu(ThoiKhoaBieu instance);
    partial void UpdateThoiKhoaBieu(ThoiKhoaBieu instance);
    partial void DeleteThoiKhoaBieu(ThoiKhoaBieu instance);
    partial void InsertThongBao(ThongBao instance);
    partial void UpdateThongBao(ThongBao instance);
    partial void DeleteThongBao(ThongBao instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SoLienLacDTConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<ThongBaoChung> ThongBaoChungs
		{
			get
			{
				return this.GetTable<ThongBaoChung>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietHocPhi> ChiTietHocPhis
		{
			get
			{
				return this.GetTable<ChiTietHocPhi>();
			}
		}
		
		public System.Data.Linq.Table<Diem> Diems
		{
			get
			{
				return this.GetTable<Diem>();
			}
		}
		
		public System.Data.Linq.Table<DiemCT> DiemCTs
		{
			get
			{
				return this.GetTable<DiemCT>();
			}
		}
		
		public System.Data.Linq.Table<GiangVien> GiangViens
		{
			get
			{
				return this.GetTable<GiangVien>();
			}
		}
		
		public System.Data.Linq.Table<GiangVien_Nganh> GiangVien_Nganhs
		{
			get
			{
				return this.GetTable<GiangVien_Nganh>();
			}
		}
		
		public System.Data.Linq.Table<GV_LM> GV_LMs
		{
			get
			{
				return this.GetTable<GV_LM>();
			}
		}
		
		public System.Data.Linq.Table<GV_Mon> GV_Mons
		{
			get
			{
				return this.GetTable<GV_Mon>();
			}
		}
		
		public System.Data.Linq.Table<LichThi> LichThis
		{
			get
			{
				return this.GetTable<LichThi>();
			}
		}
		
		public System.Data.Linq.Table<Lop> Lops
		{
			get
			{
				return this.GetTable<Lop>();
			}
		}
		
		public System.Data.Linq.Table<LopMon> LopMons
		{
			get
			{
				return this.GetTable<LopMon>();
			}
		}
		
		public System.Data.Linq.Table<MonHoc> MonHocs
		{
			get
			{
				return this.GetTable<MonHoc>();
			}
		}
		
		public System.Data.Linq.Table<Nganh> Nganhs
		{
			get
			{
				return this.GetTable<Nganh>();
			}
		}
		
		public System.Data.Linq.Table<Nganh_Mon> Nganh_Mons
		{
			get
			{
				return this.GetTable<Nganh_Mon>();
			}
		}
		
		public System.Data.Linq.Table<PH> PHs
		{
			get
			{
				return this.GetTable<PH>();
			}
		}
		
		public System.Data.Linq.Table<SinhVien> SinhViens
		{
			get
			{
				return this.GetTable<SinhVien>();
			}
		}
		
		public System.Data.Linq.Table<SinhVien_LopMon> SinhVien_LopMons
		{
			get
			{
				return this.GetTable<SinhVien_LopMon>();
			}
		}
		
		public System.Data.Linq.Table<SinhVien_Nganh> SinhVien_Nganhs
		{
			get
			{
				return this.GetTable<SinhVien_Nganh>();
			}
		}
		
		public System.Data.Linq.Table<SV_LOP> SV_LOPs
		{
			get
			{
				return this.GetTable<SV_LOP>();
			}
		}
		
		public System.Data.Linq.Table<SV_MON> SV_MONs
		{
			get
			{
				return this.GetTable<SV_MON>();
			}
		}
		
		public System.Data.Linq.Table<ThoiKhoaBieu> ThoiKhoaBieus
		{
			get
			{
				return this.GetTable<ThoiKhoaBieu>();
			}
		}
		
		public System.Data.Linq.Table<ThongBao> ThongBaos
		{
			get
			{
				return this.GetTable<ThongBao>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TaiKhoan;
		
		private string _Password;
		
		private string _TenAdmin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnTenAdminChanging(string value);
    partial void OnTenAdminChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="VarChar(50)")]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenAdmin", DbType="NVarChar(50)")]
		public string TenAdmin
		{
			get
			{
				return this._TenAdmin;
			}
			set
			{
				if ((this._TenAdmin != value))
				{
					this.OnTenAdminChanging(value);
					this.SendPropertyChanging();
					this._TenAdmin = value;
					this.SendPropertyChanged("TenAdmin");
					this.OnTenAdminChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThongBaoChung")]
	public partial class ThongBaoChung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTB;
		
		private string _TieuDe;
		
		private string _NoiDung;
		
		private System.DateTime _NgayDang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTBChanging(int value);
    partial void OnMaTBChanged();
    partial void OnTieuDeChanging(string value);
    partial void OnTieuDeChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnNgayDangChanging(System.DateTime value);
    partial void OnNgayDangChanged();
    #endregion
		
		public ThongBaoChung()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTB", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTB
		{
			get
			{
				return this._MaTB;
			}
			set
			{
				if ((this._MaTB != value))
				{
					this.OnMaTBChanging(value);
					this.SendPropertyChanging();
					this._MaTB = value;
					this.SendPropertyChanged("MaTB");
					this.OnMaTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieuDe", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TieuDe
		{
			get
			{
				return this._TieuDe;
			}
			set
			{
				if ((this._TieuDe != value))
				{
					this.OnTieuDeChanging(value);
					this.SendPropertyChanging();
					this._TieuDe = value;
					this.SendPropertyChanged("TieuDe");
					this.OnTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDang", DbType="DateTime NOT NULL")]
		public System.DateTime NgayDang
		{
			get
			{
				return this._NgayDang;
			}
			set
			{
				if ((this._NgayDang != value))
				{
					this.OnNgayDangChanging(value);
					this.SendPropertyChanging();
					this._NgayDang = value;
					this.SendPropertyChanged("NgayDang");
					this.OnNgayDangChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietHocPhi")]
	public partial class ChiTietHocPhi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMon;
		
		private System.Nullable<double> _TCHP;
		
		private System.Nullable<int> _PhiTL;
		
		private System.Nullable<long> _HocPhi;
		
		private System.Nullable<long> _SoTienPhaiDong;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnTCHPChanging(System.Nullable<double> value);
    partial void OnTCHPChanged();
    partial void OnPhiTLChanging(System.Nullable<int> value);
    partial void OnPhiTLChanged();
    partial void OnHocPhiChanging(System.Nullable<long> value);
    partial void OnHocPhiChanged();
    partial void OnSoTienPhaiDongChanging(System.Nullable<long> value);
    partial void OnSoTienPhaiDongChanged();
    #endregion
		
		public ChiTietHocPhi()
		{
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TCHP", DbType="Float")]
		public System.Nullable<double> TCHP
		{
			get
			{
				return this._TCHP;
			}
			set
			{
				if ((this._TCHP != value))
				{
					this.OnTCHPChanging(value);
					this.SendPropertyChanging();
					this._TCHP = value;
					this.SendPropertyChanged("TCHP");
					this.OnTCHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhiTL", DbType="Int")]
		public System.Nullable<int> PhiTL
		{
			get
			{
				return this._PhiTL;
			}
			set
			{
				if ((this._PhiTL != value))
				{
					this.OnPhiTLChanging(value);
					this.SendPropertyChanging();
					this._PhiTL = value;
					this.SendPropertyChanged("PhiTL");
					this.OnPhiTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HocPhi", DbType="BigInt")]
		public System.Nullable<long> HocPhi
		{
			get
			{
				return this._HocPhi;
			}
			set
			{
				if ((this._HocPhi != value))
				{
					this.OnHocPhiChanging(value);
					this.SendPropertyChanging();
					this._HocPhi = value;
					this.SendPropertyChanged("HocPhi");
					this.OnHocPhiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTienPhaiDong", DbType="BigInt")]
		public System.Nullable<long> SoTienPhaiDong
		{
			get
			{
				return this._SoTienPhaiDong;
			}
			set
			{
				if ((this._SoTienPhaiDong != value))
				{
					this.OnSoTienPhaiDongChanging(value);
					this.SendPropertyChanging();
					this._SoTienPhaiDong = value;
					this.SendPropertyChanged("SoTienPhaiDong");
					this.OnSoTienPhaiDongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_ChiTietHocPhi", Storage="_MonHoc", ThisKey="MaMon", OtherKey="MaMon", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.ChiTietHocPhi = null;
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.ChiTietHocPhi = this;
						this._MaMon = value.MaMon;
					}
					else
					{
						this._MaMon = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Diem")]
	public partial class Diem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDDiem;
		
		private string _MaSV;
		
		private System.Nullable<double> _DiemTBTichLuy;
		
		private System.Nullable<double> _DiemTBHK;
		
		private System.Nullable<int> _SoTinChiDat;
		
		private System.Nullable<int> _SoTinChiTL;
		
		private string _NamHoc;
		
		private int _HocKy;
		
		private EntitySet<DiemCT> _DiemCTs;
		
		private EntityRef<SinhVien> _SinhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDiemChanging(int value);
    partial void OnIDDiemChanged();
    partial void OnMaSVChanging(string value);
    partial void OnMaSVChanged();
    partial void OnDiemTBTichLuyChanging(System.Nullable<double> value);
    partial void OnDiemTBTichLuyChanged();
    partial void OnDiemTBHKChanging(System.Nullable<double> value);
    partial void OnDiemTBHKChanged();
    partial void OnSoTinChiDatChanging(System.Nullable<int> value);
    partial void OnSoTinChiDatChanged();
    partial void OnSoTinChiTLChanging(System.Nullable<int> value);
    partial void OnSoTinChiTLChanged();
    partial void OnNamHocChanging(string value);
    partial void OnNamHocChanged();
    partial void OnHocKyChanging(int value);
    partial void OnHocKyChanged();
    #endregion
		
		public Diem()
		{
			this._DiemCTs = new EntitySet<DiemCT>(new Action<DiemCT>(this.attach_DiemCTs), new Action<DiemCT>(this.detach_DiemCTs));
			this._SinhVien = default(EntityRef<SinhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDiem", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDDiem
		{
			get
			{
				return this._IDDiem;
			}
			set
			{
				if ((this._IDDiem != value))
				{
					this.OnIDDiemChanging(value);
					this.SendPropertyChanging();
					this._IDDiem = value;
					this.SendPropertyChanged("IDDiem");
					this.OnIDDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSV", DbType="VarChar(50)")]
		public string MaSV
		{
			get
			{
				return this._MaSV;
			}
			set
			{
				if ((this._MaSV != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSVChanging(value);
					this.SendPropertyChanging();
					this._MaSV = value;
					this.SendPropertyChanged("MaSV");
					this.OnMaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemTBTichLuy", DbType="Float")]
		public System.Nullable<double> DiemTBTichLuy
		{
			get
			{
				return this._DiemTBTichLuy;
			}
			set
			{
				if ((this._DiemTBTichLuy != value))
				{
					this.OnDiemTBTichLuyChanging(value);
					this.SendPropertyChanging();
					this._DiemTBTichLuy = value;
					this.SendPropertyChanged("DiemTBTichLuy");
					this.OnDiemTBTichLuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemTBHK", DbType="Float")]
		public System.Nullable<double> DiemTBHK
		{
			get
			{
				return this._DiemTBHK;
			}
			set
			{
				if ((this._DiemTBHK != value))
				{
					this.OnDiemTBHKChanging(value);
					this.SendPropertyChanging();
					this._DiemTBHK = value;
					this.SendPropertyChanged("DiemTBHK");
					this.OnDiemTBHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTinChiDat", DbType="Int")]
		public System.Nullable<int> SoTinChiDat
		{
			get
			{
				return this._SoTinChiDat;
			}
			set
			{
				if ((this._SoTinChiDat != value))
				{
					this.OnSoTinChiDatChanging(value);
					this.SendPropertyChanging();
					this._SoTinChiDat = value;
					this.SendPropertyChanged("SoTinChiDat");
					this.OnSoTinChiDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTinChiTL", DbType="Int")]
		public System.Nullable<int> SoTinChiTL
		{
			get
			{
				return this._SoTinChiTL;
			}
			set
			{
				if ((this._SoTinChiTL != value))
				{
					this.OnSoTinChiTLChanging(value);
					this.SendPropertyChanging();
					this._SoTinChiTL = value;
					this.SendPropertyChanged("SoTinChiTL");
					this.OnSoTinChiTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamHoc", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string NamHoc
		{
			get
			{
				return this._NamHoc;
			}
			set
			{
				if ((this._NamHoc != value))
				{
					this.OnNamHocChanging(value);
					this.SendPropertyChanging();
					this._NamHoc = value;
					this.SendPropertyChanged("NamHoc");
					this.OnNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HocKy", DbType="Int NOT NULL")]
		public int HocKy
		{
			get
			{
				return this._HocKy;
			}
			set
			{
				if ((this._HocKy != value))
				{
					this.OnHocKyChanging(value);
					this.SendPropertyChanging();
					this._HocKy = value;
					this.SendPropertyChanged("HocKy");
					this.OnHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Diem_DiemCT", Storage="_DiemCTs", ThisKey="IDDiem", OtherKey="IDDiem")]
		public EntitySet<DiemCT> DiemCTs
		{
			get
			{
				return this._DiemCTs;
			}
			set
			{
				this._DiemCTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_Diem", Storage="_SinhVien", ThisKey="MaSV", OtherKey="MaSV", IsForeignKey=true)]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.Diems.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.Diems.Add(this);
						this._MaSV = value.MaSV;
					}
					else
					{
						this._MaSV = default(string);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DiemCTs(DiemCT entity)
		{
			this.SendPropertyChanging();
			entity.Diem = this;
		}
		
		private void detach_DiemCTs(DiemCT entity)
		{
			this.SendPropertyChanging();
			entity.Diem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiemCT")]
	public partial class DiemCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDDiemCT;
		
		private System.Nullable<int> _IDDiem;
		
		private string _MaMon;
		
		private string _NamHoc;
		
		private System.Nullable<double> _DiemGK;
		
		private System.Nullable<double> _DiemCK;
		
		private System.Nullable<double> _DiemTBM;
		
		private int _HocKy;
		
		private System.Nullable<bool> _KQ;
		
		private EntityRef<Diem> _Diem;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDiemCTChanging(int value);
    partial void OnIDDiemCTChanged();
    partial void OnIDDiemChanging(System.Nullable<int> value);
    partial void OnIDDiemChanged();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnNamHocChanging(string value);
    partial void OnNamHocChanged();
    partial void OnDiemGKChanging(System.Nullable<double> value);
    partial void OnDiemGKChanged();
    partial void OnDiemCKChanging(System.Nullable<double> value);
    partial void OnDiemCKChanged();
    partial void OnDiemTBMChanging(System.Nullable<double> value);
    partial void OnDiemTBMChanged();
    partial void OnHocKyChanging(int value);
    partial void OnHocKyChanged();
    partial void OnKQChanging(System.Nullable<bool> value);
    partial void OnKQChanged();
    #endregion
		
		public DiemCT()
		{
			this._Diem = default(EntityRef<Diem>);
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDiemCT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDDiemCT
		{
			get
			{
				return this._IDDiemCT;
			}
			set
			{
				if ((this._IDDiemCT != value))
				{
					this.OnIDDiemCTChanging(value);
					this.SendPropertyChanging();
					this._IDDiemCT = value;
					this.SendPropertyChanged("IDDiemCT");
					this.OnIDDiemCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDiem", DbType="Int")]
		public System.Nullable<int> IDDiem
		{
			get
			{
				return this._IDDiem;
			}
			set
			{
				if ((this._IDDiem != value))
				{
					if (this._Diem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDiemChanging(value);
					this.SendPropertyChanging();
					this._IDDiem = value;
					this.SendPropertyChanged("IDDiem");
					this.OnIDDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamHoc", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string NamHoc
		{
			get
			{
				return this._NamHoc;
			}
			set
			{
				if ((this._NamHoc != value))
				{
					this.OnNamHocChanging(value);
					this.SendPropertyChanging();
					this._NamHoc = value;
					this.SendPropertyChanged("NamHoc");
					this.OnNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemGK", DbType="Float")]
		public System.Nullable<double> DiemGK
		{
			get
			{
				return this._DiemGK;
			}
			set
			{
				if ((this._DiemGK != value))
				{
					this.OnDiemGKChanging(value);
					this.SendPropertyChanging();
					this._DiemGK = value;
					this.SendPropertyChanged("DiemGK");
					this.OnDiemGKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemCK", DbType="Float")]
		public System.Nullable<double> DiemCK
		{
			get
			{
				return this._DiemCK;
			}
			set
			{
				if ((this._DiemCK != value))
				{
					this.OnDiemCKChanging(value);
					this.SendPropertyChanging();
					this._DiemCK = value;
					this.SendPropertyChanged("DiemCK");
					this.OnDiemCKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemTBM", DbType="Float")]
		public System.Nullable<double> DiemTBM
		{
			get
			{
				return this._DiemTBM;
			}
			set
			{
				if ((this._DiemTBM != value))
				{
					this.OnDiemTBMChanging(value);
					this.SendPropertyChanging();
					this._DiemTBM = value;
					this.SendPropertyChanged("DiemTBM");
					this.OnDiemTBMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HocKy", DbType="Int NOT NULL")]
		public int HocKy
		{
			get
			{
				return this._HocKy;
			}
			set
			{
				if ((this._HocKy != value))
				{
					this.OnHocKyChanging(value);
					this.SendPropertyChanging();
					this._HocKy = value;
					this.SendPropertyChanged("HocKy");
					this.OnHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KQ", DbType="Bit")]
		public System.Nullable<bool> KQ
		{
			get
			{
				return this._KQ;
			}
			set
			{
				if ((this._KQ != value))
				{
					this.OnKQChanging(value);
					this.SendPropertyChanging();
					this._KQ = value;
					this.SendPropertyChanged("KQ");
					this.OnKQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Diem_DiemCT", Storage="_Diem", ThisKey="IDDiem", OtherKey="IDDiem", IsForeignKey=true)]
		public Diem Diem
		{
			get
			{
				return this._Diem.Entity;
			}
			set
			{
				Diem previousValue = this._Diem.Entity;
				if (((previousValue != value) 
							|| (this._Diem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Diem.Entity = null;
						previousValue.DiemCTs.Remove(this);
					}
					this._Diem.Entity = value;
					if ((value != null))
					{
						value.DiemCTs.Add(this);
						this._IDDiem = value.IDDiem;
					}
					else
					{
						this._IDDiem = default(Nullable<int>);
					}
					this.SendPropertyChanged("Diem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_DiemCT", Storage="_MonHoc", ThisKey="MaMon", OtherKey="MaMon", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.DiemCTs.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.DiemCTs.Add(this);
						this._MaMon = value.MaMon;
					}
					else
					{
						this._MaMon = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiangVien")]
	public partial class GiangVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGV;
		
		private string _TenGV;
		
		private string _Password;
		
		private EntitySet<GiangVien_Nganh> _GiangVien_Nganhs;
		
		private EntitySet<Lop> _Lops;
		
		private EntitySet<ThongBao> _ThongBaos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGVChanging(string value);
    partial void OnMaGVChanged();
    partial void OnTenGVChanging(string value);
    partial void OnTenGVChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public GiangVien()
		{
			this._GiangVien_Nganhs = new EntitySet<GiangVien_Nganh>(new Action<GiangVien_Nganh>(this.attach_GiangVien_Nganhs), new Action<GiangVien_Nganh>(this.detach_GiangVien_Nganhs));
			this._Lops = new EntitySet<Lop>(new Action<Lop>(this.attach_Lops), new Action<Lop>(this.detach_Lops));
			this._ThongBaos = new EntitySet<ThongBao>(new Action<ThongBao>(this.attach_ThongBaos), new Action<ThongBao>(this.detach_ThongBaos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenGV", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string TenGV
		{
			get
			{
				return this._TenGV;
			}
			set
			{
				if ((this._TenGV != value))
				{
					this.OnTenGVChanging(value);
					this.SendPropertyChanging();
					this._TenGV = value;
					this.SendPropertyChanged("TenGV");
					this.OnTenGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiangVien_GiangVien_Nganh", Storage="_GiangVien_Nganhs", ThisKey="MaGV", OtherKey="MaGV")]
		public EntitySet<GiangVien_Nganh> GiangVien_Nganhs
		{
			get
			{
				return this._GiangVien_Nganhs;
			}
			set
			{
				this._GiangVien_Nganhs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiangVien_Lop", Storage="_Lops", ThisKey="MaGV", OtherKey="MaGV")]
		public EntitySet<Lop> Lops
		{
			get
			{
				return this._Lops;
			}
			set
			{
				this._Lops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiangVien_ThongBao", Storage="_ThongBaos", ThisKey="MaGV", OtherKey="MaGV")]
		public EntitySet<ThongBao> ThongBaos
		{
			get
			{
				return this._ThongBaos;
			}
			set
			{
				this._ThongBaos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GiangVien_Nganhs(GiangVien_Nganh entity)
		{
			this.SendPropertyChanging();
			entity.GiangVien = this;
		}
		
		private void detach_GiangVien_Nganhs(GiangVien_Nganh entity)
		{
			this.SendPropertyChanging();
			entity.GiangVien = null;
		}
		
		private void attach_Lops(Lop entity)
		{
			this.SendPropertyChanging();
			entity.GiangVien = this;
		}
		
		private void detach_Lops(Lop entity)
		{
			this.SendPropertyChanging();
			entity.GiangVien = null;
		}
		
		private void attach_ThongBaos(ThongBao entity)
		{
			this.SendPropertyChanging();
			entity.GiangVien = this;
		}
		
		private void detach_ThongBaos(ThongBao entity)
		{
			this.SendPropertyChanging();
			entity.GiangVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiangVien_Nganh")]
	public partial class GiangVien_Nganh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Stt;
		
		private string _MaGV;
		
		private string _MaNganh;
		
		private EntityRef<GiangVien> _GiangVien;
		
		private EntityRef<Nganh> _Nganh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSttChanging(int value);
    partial void OnSttChanged();
    partial void OnMaGVChanging(string value);
    partial void OnMaGVChanged();
    partial void OnMaNganhChanging(string value);
    partial void OnMaNganhChanged();
    #endregion
		
		public GiangVien_Nganh()
		{
			this._GiangVien = default(EntityRef<GiangVien>);
			this._Nganh = default(EntityRef<Nganh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stt", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Stt
		{
			get
			{
				return this._Stt;
			}
			set
			{
				if ((this._Stt != value))
				{
					this.OnSttChanging(value);
					this.SendPropertyChanging();
					this._Stt = value;
					this.SendPropertyChanged("Stt");
					this.OnSttChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="VarChar(50)")]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GiangVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNganh", DbType="VarChar(50)")]
		public string MaNganh
		{
			get
			{
				return this._MaNganh;
			}
			set
			{
				if ((this._MaNganh != value))
				{
					if (this._Nganh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNganhChanging(value);
					this.SendPropertyChanging();
					this._MaNganh = value;
					this.SendPropertyChanged("MaNganh");
					this.OnMaNganhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiangVien_GiangVien_Nganh", Storage="_GiangVien", ThisKey="MaGV", OtherKey="MaGV", IsForeignKey=true)]
		public GiangVien GiangVien
		{
			get
			{
				return this._GiangVien.Entity;
			}
			set
			{
				GiangVien previousValue = this._GiangVien.Entity;
				if (((previousValue != value) 
							|| (this._GiangVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiangVien.Entity = null;
						previousValue.GiangVien_Nganhs.Remove(this);
					}
					this._GiangVien.Entity = value;
					if ((value != null))
					{
						value.GiangVien_Nganhs.Add(this);
						this._MaGV = value.MaGV;
					}
					else
					{
						this._MaGV = default(string);
					}
					this.SendPropertyChanged("GiangVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nganh_GiangVien_Nganh", Storage="_Nganh", ThisKey="MaNganh", OtherKey="MaNganh", IsForeignKey=true)]
		public Nganh Nganh
		{
			get
			{
				return this._Nganh.Entity;
			}
			set
			{
				Nganh previousValue = this._Nganh.Entity;
				if (((previousValue != value) 
							|| (this._Nganh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Nganh.Entity = null;
						previousValue.GiangVien_Nganhs.Remove(this);
					}
					this._Nganh.Entity = value;
					if ((value != null))
					{
						value.GiangVien_Nganhs.Add(this);
						this._MaNganh = value.MaNganh;
					}
					else
					{
						this._MaNganh = default(string);
					}
					this.SendPropertyChanged("Nganh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GV_LM")]
	public partial class GV_LM
	{
		
		private string _MaLM;
		
		private string _MaGV;
		
		public GV_LM()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLM", DbType="VarChar(10)")]
		public string MaLM
		{
			get
			{
				return this._MaLM;
			}
			set
			{
				if ((this._MaLM != value))
				{
					this._MaLM = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="VarChar(50)")]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					this._MaGV = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GV_Mon")]
	public partial class GV_Mon
	{
		
		private string _MaGV;
		
		private string _MaMon;
		
		public GV_Mon()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					this._MaGV = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					this._MaMon = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LichThi")]
	public partial class LichThi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDLichThi;
		
		private string _MaMon;
		
		private string _MaSV;
		
		private string _TenMon;
		
		private string _NhomThi;
		
		private System.DateTime _NgayThi;
		
		private System.TimeSpan _GioBD;
		
		private int _SoPhut;
		
		private string _Phong;
		
		private string _GhiChu;
		
		private string _NamHoc;
		
		private int _HocKy;
		
		private EntityRef<MonHoc> _MonHoc;
		
		private EntityRef<SinhVien> _SinhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDLichThiChanging(int value);
    partial void OnIDLichThiChanged();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnMaSVChanging(string value);
    partial void OnMaSVChanged();
    partial void OnTenMonChanging(string value);
    partial void OnTenMonChanged();
    partial void OnNhomThiChanging(string value);
    partial void OnNhomThiChanged();
    partial void OnNgayThiChanging(System.DateTime value);
    partial void OnNgayThiChanged();
    partial void OnGioBDChanging(System.TimeSpan value);
    partial void OnGioBDChanged();
    partial void OnSoPhutChanging(int value);
    partial void OnSoPhutChanged();
    partial void OnPhongChanging(string value);
    partial void OnPhongChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnNamHocChanging(string value);
    partial void OnNamHocChanged();
    partial void OnHocKyChanging(int value);
    partial void OnHocKyChanged();
    #endregion
		
		public LichThi()
		{
			this._MonHoc = default(EntityRef<MonHoc>);
			this._SinhVien = default(EntityRef<SinhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLichThi", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDLichThi
		{
			get
			{
				return this._IDLichThi;
			}
			set
			{
				if ((this._IDLichThi != value))
				{
					this.OnIDLichThiChanging(value);
					this.SendPropertyChanging();
					this._IDLichThi = value;
					this.SendPropertyChanged("IDLichThi");
					this.OnIDLichThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSV", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MaSV
		{
			get
			{
				return this._MaSV;
			}
			set
			{
				if ((this._MaSV != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSVChanging(value);
					this.SendPropertyChanging();
					this._MaSV = value;
					this.SendPropertyChanged("MaSV");
					this.OnMaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMon", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenMon
		{
			get
			{
				return this._TenMon;
			}
			set
			{
				if ((this._TenMon != value))
				{
					this.OnTenMonChanging(value);
					this.SendPropertyChanging();
					this._TenMon = value;
					this.SendPropertyChanged("TenMon");
					this.OnTenMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhomThi", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string NhomThi
		{
			get
			{
				return this._NhomThi;
			}
			set
			{
				if ((this._NhomThi != value))
				{
					this.OnNhomThiChanging(value);
					this.SendPropertyChanging();
					this._NhomThi = value;
					this.SendPropertyChanged("NhomThi");
					this.OnNhomThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThi", DbType="Date NOT NULL")]
		public System.DateTime NgayThi
		{
			get
			{
				return this._NgayThi;
			}
			set
			{
				if ((this._NgayThi != value))
				{
					this.OnNgayThiChanging(value);
					this.SendPropertyChanging();
					this._NgayThi = value;
					this.SendPropertyChanged("NgayThi");
					this.OnNgayThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioBD", DbType="Time NOT NULL")]
		public System.TimeSpan GioBD
		{
			get
			{
				return this._GioBD;
			}
			set
			{
				if ((this._GioBD != value))
				{
					this.OnGioBDChanging(value);
					this.SendPropertyChanging();
					this._GioBD = value;
					this.SendPropertyChanged("GioBD");
					this.OnGioBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoPhut", DbType="Int NOT NULL")]
		public int SoPhut
		{
			get
			{
				return this._SoPhut;
			}
			set
			{
				if ((this._SoPhut != value))
				{
					this.OnSoPhutChanging(value);
					this.SendPropertyChanging();
					this._SoPhut = value;
					this.SendPropertyChanged("SoPhut");
					this.OnSoPhutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phong", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Phong
		{
			get
			{
				return this._Phong;
			}
			set
			{
				if ((this._Phong != value))
				{
					this.OnPhongChanging(value);
					this.SendPropertyChanging();
					this._Phong = value;
					this.SendPropertyChanged("Phong");
					this.OnPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamHoc", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string NamHoc
		{
			get
			{
				return this._NamHoc;
			}
			set
			{
				if ((this._NamHoc != value))
				{
					this.OnNamHocChanging(value);
					this.SendPropertyChanging();
					this._NamHoc = value;
					this.SendPropertyChanged("NamHoc");
					this.OnNamHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HocKy", DbType="Int NOT NULL")]
		public int HocKy
		{
			get
			{
				return this._HocKy;
			}
			set
			{
				if ((this._HocKy != value))
				{
					this.OnHocKyChanging(value);
					this.SendPropertyChanging();
					this._HocKy = value;
					this.SendPropertyChanged("HocKy");
					this.OnHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_LichThi", Storage="_MonHoc", ThisKey="MaMon", OtherKey="MaMon", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.LichThis.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.LichThis.Add(this);
						this._MaMon = value.MaMon;
					}
					else
					{
						this._MaMon = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_LichThi", Storage="_SinhVien", ThisKey="MaSV", OtherKey="MaSV", IsForeignKey=true)]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.LichThis.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.LichThis.Add(this);
						this._MaSV = value.MaSV;
					}
					else
					{
						this._MaSV = default(string);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lop")]
	public partial class Lop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Malop;
		
		private string _MaGV;
		
		private EntityRef<GiangVien> _GiangVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMalopChanging(string value);
    partial void OnMalopChanged();
    partial void OnMaGVChanging(string value);
    partial void OnMaGVChanged();
    #endregion
		
		public Lop()
		{
			this._GiangVien = default(EntityRef<GiangVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Malop", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Malop
		{
			get
			{
				return this._Malop;
			}
			set
			{
				if ((this._Malop != value))
				{
					this.OnMalopChanging(value);
					this.SendPropertyChanging();
					this._Malop = value;
					this.SendPropertyChanged("Malop");
					this.OnMalopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="VarChar(50)")]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GiangVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiangVien_Lop", Storage="_GiangVien", ThisKey="MaGV", OtherKey="MaGV", IsForeignKey=true)]
		public GiangVien GiangVien
		{
			get
			{
				return this._GiangVien.Entity;
			}
			set
			{
				GiangVien previousValue = this._GiangVien.Entity;
				if (((previousValue != value) 
							|| (this._GiangVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiangVien.Entity = null;
						previousValue.Lops.Remove(this);
					}
					this._GiangVien.Entity = value;
					if ((value != null))
					{
						value.Lops.Add(this);
						this._MaGV = value.MaGV;
					}
					else
					{
						this._MaGV = default(string);
					}
					this.SendPropertyChanged("GiangVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LopMon")]
	public partial class LopMon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLM;
		
		private string _Lop;
		
		private string _MaMon;
		
		private EntitySet<SinhVien_LopMon> _SinhVien_LopMons;
		
		private EntitySet<ThongBao> _ThongBaos;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLMChanging(string value);
    partial void OnMaLMChanged();
    partial void OnLopChanging(string value);
    partial void OnLopChanged();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    #endregion
		
		public LopMon()
		{
			this._SinhVien_LopMons = new EntitySet<SinhVien_LopMon>(new Action<SinhVien_LopMon>(this.attach_SinhVien_LopMons), new Action<SinhVien_LopMon>(this.detach_SinhVien_LopMons));
			this._ThongBaos = new EntitySet<ThongBao>(new Action<ThongBao>(this.attach_ThongBaos), new Action<ThongBao>(this.detach_ThongBaos));
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLM", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLM
		{
			get
			{
				return this._MaLM;
			}
			set
			{
				if ((this._MaLM != value))
				{
					this.OnMaLMChanging(value);
					this.SendPropertyChanging();
					this._MaLM = value;
					this.SendPropertyChanged("MaLM");
					this.OnMaLMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lop", DbType="VarChar(10)")]
		public string Lop
		{
			get
			{
				return this._Lop;
			}
			set
			{
				if ((this._Lop != value))
				{
					this.OnLopChanging(value);
					this.SendPropertyChanging();
					this._Lop = value;
					this.SendPropertyChanged("Lop");
					this.OnLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopMon_SinhVien_LopMon", Storage="_SinhVien_LopMons", ThisKey="MaLM", OtherKey="MaLM")]
		public EntitySet<SinhVien_LopMon> SinhVien_LopMons
		{
			get
			{
				return this._SinhVien_LopMons;
			}
			set
			{
				this._SinhVien_LopMons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopMon_ThongBao", Storage="_ThongBaos", ThisKey="MaLM", OtherKey="MaLM")]
		public EntitySet<ThongBao> ThongBaos
		{
			get
			{
				return this._ThongBaos;
			}
			set
			{
				this._ThongBaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_LopMon", Storage="_MonHoc", ThisKey="MaMon", OtherKey="MaMon", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.LopMons.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.LopMons.Add(this);
						this._MaMon = value.MaMon;
					}
					else
					{
						this._MaMon = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SinhVien_LopMons(SinhVien_LopMon entity)
		{
			this.SendPropertyChanging();
			entity.LopMon = this;
		}
		
		private void detach_SinhVien_LopMons(SinhVien_LopMon entity)
		{
			this.SendPropertyChanging();
			entity.LopMon = null;
		}
		
		private void attach_ThongBaos(ThongBao entity)
		{
			this.SendPropertyChanging();
			entity.LopMon = this;
		}
		
		private void detach_ThongBaos(ThongBao entity)
		{
			this.SendPropertyChanging();
			entity.LopMon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonHoc")]
	public partial class MonHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMon;
		
		private string _TenMon;
		
		private System.Nullable<int> _Sotinchi;
		
		private string _MaMonTienQuyet;
		
		private EntityRef<ChiTietHocPhi> _ChiTietHocPhi;
		
		private EntitySet<DiemCT> _DiemCTs;
		
		private EntitySet<LichThi> _LichThis;
		
		private EntitySet<LopMon> _LopMons;
		
		private EntitySet<SV_MON> _SV_MONs;
		
		private EntitySet<ThoiKhoaBieu> _ThoiKhoaBieus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnTenMonChanging(string value);
    partial void OnTenMonChanged();
    partial void OnSotinchiChanging(System.Nullable<int> value);
    partial void OnSotinchiChanged();
    partial void OnMaMonTienQuyetChanging(string value);
    partial void OnMaMonTienQuyetChanged();
    #endregion
		
		public MonHoc()
		{
			this._ChiTietHocPhi = default(EntityRef<ChiTietHocPhi>);
			this._DiemCTs = new EntitySet<DiemCT>(new Action<DiemCT>(this.attach_DiemCTs), new Action<DiemCT>(this.detach_DiemCTs));
			this._LichThis = new EntitySet<LichThi>(new Action<LichThi>(this.attach_LichThis), new Action<LichThi>(this.detach_LichThis));
			this._LopMons = new EntitySet<LopMon>(new Action<LopMon>(this.attach_LopMons), new Action<LopMon>(this.detach_LopMons));
			this._SV_MONs = new EntitySet<SV_MON>(new Action<SV_MON>(this.attach_SV_MONs), new Action<SV_MON>(this.detach_SV_MONs));
			this._ThoiKhoaBieus = new EntitySet<ThoiKhoaBieu>(new Action<ThoiKhoaBieu>(this.attach_ThoiKhoaBieus), new Action<ThoiKhoaBieu>(this.detach_ThoiKhoaBieus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMon", DbType="NVarChar(50)")]
		public string TenMon
		{
			get
			{
				return this._TenMon;
			}
			set
			{
				if ((this._TenMon != value))
				{
					this.OnTenMonChanging(value);
					this.SendPropertyChanging();
					this._TenMon = value;
					this.SendPropertyChanged("TenMon");
					this.OnTenMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sotinchi", DbType="Int")]
		public System.Nullable<int> Sotinchi
		{
			get
			{
				return this._Sotinchi;
			}
			set
			{
				if ((this._Sotinchi != value))
				{
					this.OnSotinchiChanging(value);
					this.SendPropertyChanging();
					this._Sotinchi = value;
					this.SendPropertyChanged("Sotinchi");
					this.OnSotinchiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonTienQuyet", DbType="VarChar(10)")]
		public string MaMonTienQuyet
		{
			get
			{
				return this._MaMonTienQuyet;
			}
			set
			{
				if ((this._MaMonTienQuyet != value))
				{
					this.OnMaMonTienQuyetChanging(value);
					this.SendPropertyChanging();
					this._MaMonTienQuyet = value;
					this.SendPropertyChanged("MaMonTienQuyet");
					this.OnMaMonTienQuyetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_ChiTietHocPhi", Storage="_ChiTietHocPhi", ThisKey="MaMon", OtherKey="MaMon", IsUnique=true, IsForeignKey=false)]
		public ChiTietHocPhi ChiTietHocPhi
		{
			get
			{
				return this._ChiTietHocPhi.Entity;
			}
			set
			{
				ChiTietHocPhi previousValue = this._ChiTietHocPhi.Entity;
				if (((previousValue != value) 
							|| (this._ChiTietHocPhi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChiTietHocPhi.Entity = null;
						previousValue.MonHoc = null;
					}
					this._ChiTietHocPhi.Entity = value;
					if ((value != null))
					{
						value.MonHoc = this;
					}
					this.SendPropertyChanged("ChiTietHocPhi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_DiemCT", Storage="_DiemCTs", ThisKey="MaMon", OtherKey="MaMon")]
		public EntitySet<DiemCT> DiemCTs
		{
			get
			{
				return this._DiemCTs;
			}
			set
			{
				this._DiemCTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_LichThi", Storage="_LichThis", ThisKey="MaMon", OtherKey="MaMon")]
		public EntitySet<LichThi> LichThis
		{
			get
			{
				return this._LichThis;
			}
			set
			{
				this._LichThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_LopMon", Storage="_LopMons", ThisKey="MaMon", OtherKey="MaMon")]
		public EntitySet<LopMon> LopMons
		{
			get
			{
				return this._LopMons;
			}
			set
			{
				this._LopMons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_SV_MON", Storage="_SV_MONs", ThisKey="MaMon", OtherKey="MaMon")]
		public EntitySet<SV_MON> SV_MONs
		{
			get
			{
				return this._SV_MONs;
			}
			set
			{
				this._SV_MONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_ThoiKhoaBieu", Storage="_ThoiKhoaBieus", ThisKey="MaMon", OtherKey="MaMon")]
		public EntitySet<ThoiKhoaBieu> ThoiKhoaBieus
		{
			get
			{
				return this._ThoiKhoaBieus;
			}
			set
			{
				this._ThoiKhoaBieus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DiemCTs(DiemCT entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_DiemCTs(DiemCT entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
		
		private void attach_LichThis(LichThi entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_LichThis(LichThi entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
		
		private void attach_LopMons(LopMon entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_LopMons(LopMon entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
		
		private void attach_SV_MONs(SV_MON entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_SV_MONs(SV_MON entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
		
		private void attach_ThoiKhoaBieus(ThoiKhoaBieu entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_ThoiKhoaBieus(ThoiKhoaBieu entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nganh")]
	public partial class Nganh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNganh;
		
		private string _TenNganh;
		
		private int _TongTC;
		
		private EntitySet<GiangVien_Nganh> _GiangVien_Nganhs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNganhChanging(string value);
    partial void OnMaNganhChanged();
    partial void OnTenNganhChanging(string value);
    partial void OnTenNganhChanged();
    partial void OnTongTCChanging(int value);
    partial void OnTongTCChanged();
    #endregion
		
		public Nganh()
		{
			this._GiangVien_Nganhs = new EntitySet<GiangVien_Nganh>(new Action<GiangVien_Nganh>(this.attach_GiangVien_Nganhs), new Action<GiangVien_Nganh>(this.detach_GiangVien_Nganhs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNganh", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNganh
		{
			get
			{
				return this._MaNganh;
			}
			set
			{
				if ((this._MaNganh != value))
				{
					this.OnMaNganhChanging(value);
					this.SendPropertyChanging();
					this._MaNganh = value;
					this.SendPropertyChanged("MaNganh");
					this.OnMaNganhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNganh", DbType="NChar(30) NOT NULL", CanBeNull=false)]
		public string TenNganh
		{
			get
			{
				return this._TenNganh;
			}
			set
			{
				if ((this._TenNganh != value))
				{
					this.OnTenNganhChanging(value);
					this.SendPropertyChanging();
					this._TenNganh = value;
					this.SendPropertyChanged("TenNganh");
					this.OnTenNganhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTC", DbType="Int NOT NULL")]
		public int TongTC
		{
			get
			{
				return this._TongTC;
			}
			set
			{
				if ((this._TongTC != value))
				{
					this.OnTongTCChanging(value);
					this.SendPropertyChanging();
					this._TongTC = value;
					this.SendPropertyChanged("TongTC");
					this.OnTongTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nganh_GiangVien_Nganh", Storage="_GiangVien_Nganhs", ThisKey="MaNganh", OtherKey="MaNganh")]
		public EntitySet<GiangVien_Nganh> GiangVien_Nganhs
		{
			get
			{
				return this._GiangVien_Nganhs;
			}
			set
			{
				this._GiangVien_Nganhs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GiangVien_Nganhs(GiangVien_Nganh entity)
		{
			this.SendPropertyChanging();
			entity.Nganh = this;
		}
		
		private void detach_GiangVien_Nganhs(GiangVien_Nganh entity)
		{
			this.SendPropertyChanging();
			entity.Nganh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nganh_Mon")]
	public partial class Nganh_Mon
	{
		
		private string _MaNganh;
		
		private string _MaMon;
		
		public Nganh_Mon()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNganh", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MaNganh
		{
			get
			{
				return this._MaNganh;
			}
			set
			{
				if ((this._MaNganh != value))
				{
					this._MaNganh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					this._MaMon = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PH")]
	public partial class PH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPH;
		
		private string _TenPH;
		
		private string _SDTPH;
		
		private EntitySet<SinhVien> _SinhViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPHChanging(string value);
    partial void OnMaPHChanged();
    partial void OnTenPHChanging(string value);
    partial void OnTenPHChanged();
    partial void OnSDTPHChanging(string value);
    partial void OnSDTPHChanged();
    #endregion
		
		public PH()
		{
			this._SinhViens = new EntitySet<SinhVien>(new Action<SinhVien>(this.attach_SinhViens), new Action<SinhVien>(this.detach_SinhViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPH", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPH
		{
			get
			{
				return this._MaPH;
			}
			set
			{
				if ((this._MaPH != value))
				{
					this.OnMaPHChanging(value);
					this.SendPropertyChanging();
					this._MaPH = value;
					this.SendPropertyChanged("MaPH");
					this.OnMaPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPH", DbType="NVarChar(30)")]
		public string TenPH
		{
			get
			{
				return this._TenPH;
			}
			set
			{
				if ((this._TenPH != value))
				{
					this.OnTenPHChanging(value);
					this.SendPropertyChanging();
					this._TenPH = value;
					this.SendPropertyChanged("TenPH");
					this.OnTenPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDTPH", DbType="VarChar(15)")]
		public string SDTPH
		{
			get
			{
				return this._SDTPH;
			}
			set
			{
				if ((this._SDTPH != value))
				{
					this.OnSDTPHChanging(value);
					this.SendPropertyChanging();
					this._SDTPH = value;
					this.SendPropertyChanged("SDTPH");
					this.OnSDTPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PH_SinhVien", Storage="_SinhViens", ThisKey="MaPH", OtherKey="MaPH")]
		public EntitySet<SinhVien> SinhViens
		{
			get
			{
				return this._SinhViens;
			}
			set
			{
				this._SinhViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SinhViens(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.PH = this;
		}
		
		private void detach_SinhViens(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.PH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SinhVien")]
	public partial class SinhVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSV;
		
		private string _TenSV;
		
		private string _GioiTinh;
		
		private string _Diachi;
		
		private string _Email;
		
		private System.Nullable<long> _SDT;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _Password;
		
		private string _MaPH;
		
		private EntitySet<Diem> _Diems;
		
		private EntitySet<LichThi> _LichThis;
		
		private EntitySet<SinhVien_LopMon> _SinhVien_LopMons;
		
		private EntitySet<SV_MON> _SV_MONs;
		
		private EntityRef<PH> _PH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSVChanging(string value);
    partial void OnMaSVChanged();
    partial void OnTenSVChanging(string value);
    partial void OnTenSVChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnDiachiChanging(string value);
    partial void OnDiachiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSDTChanging(System.Nullable<long> value);
    partial void OnSDTChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnMaPHChanging(string value);
    partial void OnMaPHChanged();
    #endregion
		
		public SinhVien()
		{
			this._Diems = new EntitySet<Diem>(new Action<Diem>(this.attach_Diems), new Action<Diem>(this.detach_Diems));
			this._LichThis = new EntitySet<LichThi>(new Action<LichThi>(this.attach_LichThis), new Action<LichThi>(this.detach_LichThis));
			this._SinhVien_LopMons = new EntitySet<SinhVien_LopMon>(new Action<SinhVien_LopMon>(this.attach_SinhVien_LopMons), new Action<SinhVien_LopMon>(this.detach_SinhVien_LopMons));
			this._SV_MONs = new EntitySet<SV_MON>(new Action<SV_MON>(this.attach_SV_MONs), new Action<SV_MON>(this.detach_SV_MONs));
			this._PH = default(EntityRef<PH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSV", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSV
		{
			get
			{
				return this._MaSV;
			}
			set
			{
				if ((this._MaSV != value))
				{
					this.OnMaSVChanging(value);
					this.SendPropertyChanging();
					this._MaSV = value;
					this.SendPropertyChanged("MaSV");
					this.OnMaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSV", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string TenSV
		{
			get
			{
				return this._TenSV;
			}
			set
			{
				if ((this._TenSV != value))
				{
					this.OnTenSVChanging(value);
					this.SendPropertyChanging();
					this._TenSV = value;
					this.SendPropertyChanged("TenSV");
					this.OnTenSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diachi", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Diachi
		{
			get
			{
				return this._Diachi;
			}
			set
			{
				if ((this._Diachi != value))
				{
					this.OnDiachiChanging(value);
					this.SendPropertyChanging();
					this._Diachi = value;
					this.SendPropertyChanged("Diachi");
					this.OnDiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="BigInt")]
		public System.Nullable<long> SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPH", DbType="VarChar(50)")]
		public string MaPH
		{
			get
			{
				return this._MaPH;
			}
			set
			{
				if ((this._MaPH != value))
				{
					if (this._PH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPHChanging(value);
					this.SendPropertyChanging();
					this._MaPH = value;
					this.SendPropertyChanged("MaPH");
					this.OnMaPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_Diem", Storage="_Diems", ThisKey="MaSV", OtherKey="MaSV")]
		public EntitySet<Diem> Diems
		{
			get
			{
				return this._Diems;
			}
			set
			{
				this._Diems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_LichThi", Storage="_LichThis", ThisKey="MaSV", OtherKey="MaSV")]
		public EntitySet<LichThi> LichThis
		{
			get
			{
				return this._LichThis;
			}
			set
			{
				this._LichThis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_SinhVien_LopMon", Storage="_SinhVien_LopMons", ThisKey="MaSV", OtherKey="MaSV")]
		public EntitySet<SinhVien_LopMon> SinhVien_LopMons
		{
			get
			{
				return this._SinhVien_LopMons;
			}
			set
			{
				this._SinhVien_LopMons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_SV_MON", Storage="_SV_MONs", ThisKey="MaSV", OtherKey="MaSV")]
		public EntitySet<SV_MON> SV_MONs
		{
			get
			{
				return this._SV_MONs;
			}
			set
			{
				this._SV_MONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PH_SinhVien", Storage="_PH", ThisKey="MaPH", OtherKey="MaPH", IsForeignKey=true)]
		public PH PH
		{
			get
			{
				return this._PH.Entity;
			}
			set
			{
				PH previousValue = this._PH.Entity;
				if (((previousValue != value) 
							|| (this._PH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PH.Entity = null;
						previousValue.SinhViens.Remove(this);
					}
					this._PH.Entity = value;
					if ((value != null))
					{
						value.SinhViens.Add(this);
						this._MaPH = value.MaPH;
					}
					else
					{
						this._MaPH = default(string);
					}
					this.SendPropertyChanged("PH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Diems(Diem entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_Diems(Diem entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
		
		private void attach_LichThis(LichThi entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_LichThis(LichThi entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
		
		private void attach_SinhVien_LopMons(SinhVien_LopMon entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_SinhVien_LopMons(SinhVien_LopMon entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
		
		private void attach_SV_MONs(SV_MON entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_SV_MONs(SV_MON entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SinhVien_LopMon")]
	public partial class SinhVien_LopMon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ST;
		
		private string _MaSV;
		
		private string _MaLM;
		
		private EntityRef<LopMon> _LopMon;
		
		private EntityRef<SinhVien> _SinhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTChanging(int value);
    partial void OnSTChanged();
    partial void OnMaSVChanging(string value);
    partial void OnMaSVChanged();
    partial void OnMaLMChanging(string value);
    partial void OnMaLMChanged();
    #endregion
		
		public SinhVien_LopMon()
		{
			this._LopMon = default(EntityRef<LopMon>);
			this._SinhVien = default(EntityRef<SinhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ST", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ST
		{
			get
			{
				return this._ST;
			}
			set
			{
				if ((this._ST != value))
				{
					this.OnSTChanging(value);
					this.SendPropertyChanging();
					this._ST = value;
					this.SendPropertyChanged("ST");
					this.OnSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSV", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MaSV
		{
			get
			{
				return this._MaSV;
			}
			set
			{
				if ((this._MaSV != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSVChanging(value);
					this.SendPropertyChanging();
					this._MaSV = value;
					this.SendPropertyChanged("MaSV");
					this.OnMaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLM", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MaLM
		{
			get
			{
				return this._MaLM;
			}
			set
			{
				if ((this._MaLM != value))
				{
					if (this._LopMon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLMChanging(value);
					this.SendPropertyChanging();
					this._MaLM = value;
					this.SendPropertyChanged("MaLM");
					this.OnMaLMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopMon_SinhVien_LopMon", Storage="_LopMon", ThisKey="MaLM", OtherKey="MaLM", IsForeignKey=true)]
		public LopMon LopMon
		{
			get
			{
				return this._LopMon.Entity;
			}
			set
			{
				LopMon previousValue = this._LopMon.Entity;
				if (((previousValue != value) 
							|| (this._LopMon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LopMon.Entity = null;
						previousValue.SinhVien_LopMons.Remove(this);
					}
					this._LopMon.Entity = value;
					if ((value != null))
					{
						value.SinhVien_LopMons.Add(this);
						this._MaLM = value.MaLM;
					}
					else
					{
						this._MaLM = default(string);
					}
					this.SendPropertyChanged("LopMon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_SinhVien_LopMon", Storage="_SinhVien", ThisKey="MaSV", OtherKey="MaSV", IsForeignKey=true)]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.SinhVien_LopMons.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.SinhVien_LopMons.Add(this);
						this._MaSV = value.MaSV;
					}
					else
					{
						this._MaSV = default(string);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SinhVien_Nganh")]
	public partial class SinhVien_Nganh
	{
		
		private string _MaSV;
		
		private string _MaNganh;
		
		public SinhVien_Nganh()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSV", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MaSV
		{
			get
			{
				return this._MaSV;
			}
			set
			{
				if ((this._MaSV != value))
				{
					this._MaSV = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNganh", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MaNganh
		{
			get
			{
				return this._MaNganh;
			}
			set
			{
				if ((this._MaNganh != value))
				{
					this._MaNganh = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SV_LOP")]
	public partial class SV_LOP
	{
		
		private string _Malop;
		
		private string _MaSV;
		
		public SV_LOP()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Malop", DbType="VarChar(10)")]
		public string Malop
		{
			get
			{
				return this._Malop;
			}
			set
			{
				if ((this._Malop != value))
				{
					this._Malop = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSV", DbType="VarChar(50)")]
		public string MaSV
		{
			get
			{
				return this._MaSV;
			}
			set
			{
				if ((this._MaSV != value))
				{
					this._MaSV = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SV_MON")]
	public partial class SV_MON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _STT;
		
		private string _MaSV;
		
		private string _MaMon;
		
		private System.Nullable<bool> _DaHoc;
		
		private string _MaMonTienquyet;
		
		private EntityRef<MonHoc> _MonHoc;
		
		private EntityRef<SinhVien> _SinhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTTChanging(int value);
    partial void OnSTTChanged();
    partial void OnMaSVChanging(string value);
    partial void OnMaSVChanged();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnDaHocChanging(System.Nullable<bool> value);
    partial void OnDaHocChanged();
    partial void OnMaMonTienquyetChanging(string value);
    partial void OnMaMonTienquyetChanged();
    #endregion
		
		public SV_MON()
		{
			this._MonHoc = default(EntityRef<MonHoc>);
			this._SinhVien = default(EntityRef<SinhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int STT
		{
			get
			{
				return this._STT;
			}
			set
			{
				if ((this._STT != value))
				{
					this.OnSTTChanging(value);
					this.SendPropertyChanging();
					this._STT = value;
					this.SendPropertyChanged("STT");
					this.OnSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSV", DbType="VarChar(50)")]
		public string MaSV
		{
			get
			{
				return this._MaSV;
			}
			set
			{
				if ((this._MaSV != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSVChanging(value);
					this.SendPropertyChanging();
					this._MaSV = value;
					this.SendPropertyChanged("MaSV");
					this.OnMaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="VarChar(10)")]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaHoc", DbType="Bit")]
		public System.Nullable<bool> DaHoc
		{
			get
			{
				return this._DaHoc;
			}
			set
			{
				if ((this._DaHoc != value))
				{
					this.OnDaHocChanging(value);
					this.SendPropertyChanging();
					this._DaHoc = value;
					this.SendPropertyChanged("DaHoc");
					this.OnDaHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMonTienquyet", DbType="VarChar(50)")]
		public string MaMonTienquyet
		{
			get
			{
				return this._MaMonTienquyet;
			}
			set
			{
				if ((this._MaMonTienquyet != value))
				{
					this.OnMaMonTienquyetChanging(value);
					this.SendPropertyChanging();
					this._MaMonTienquyet = value;
					this.SendPropertyChanged("MaMonTienquyet");
					this.OnMaMonTienquyetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_SV_MON", Storage="_MonHoc", ThisKey="MaMon", OtherKey="MaMon", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.SV_MONs.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.SV_MONs.Add(this);
						this._MaMon = value.MaMon;
					}
					else
					{
						this._MaMon = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_SV_MON", Storage="_SinhVien", ThisKey="MaSV", OtherKey="MaSV", IsForeignKey=true)]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.SV_MONs.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.SV_MONs.Add(this);
						this._MaSV = value.MaSV;
					}
					else
					{
						this._MaSV = default(string);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThoiKhoaBieu")]
	public partial class ThoiKhoaBieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTKB;
		
		private string _MaMon;
		
		private string _TenMon;
		
		private string _MaGV;
		
		private string _Phong;
		
		private int _TietBD;
		
		private int _Thu;
		
		private System.Nullable<int> _TH;
		
		private int _ST;
		
		private System.Nullable<System.DateTime> _ThoiGianBD;
		
		private int _HocKy;
		
		private string _MaLM;
		
		private System.Nullable<System.DateTime> _ThoiGianKT;
		
		private System.Nullable<int> _TongNgayHoc;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTKBChanging(int value);
    partial void OnIDTKBChanged();
    partial void OnMaMonChanging(string value);
    partial void OnMaMonChanged();
    partial void OnTenMonChanging(string value);
    partial void OnTenMonChanged();
    partial void OnMaGVChanging(string value);
    partial void OnMaGVChanged();
    partial void OnPhongChanging(string value);
    partial void OnPhongChanged();
    partial void OnTietBDChanging(int value);
    partial void OnTietBDChanged();
    partial void OnThuChanging(int value);
    partial void OnThuChanged();
    partial void OnTHChanging(System.Nullable<int> value);
    partial void OnTHChanged();
    partial void OnSTChanging(int value);
    partial void OnSTChanged();
    partial void OnThoiGianBDChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianBDChanged();
    partial void OnHocKyChanging(int value);
    partial void OnHocKyChanged();
    partial void OnMaLMChanging(string value);
    partial void OnMaLMChanged();
    partial void OnThoiGianKTChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianKTChanged();
    partial void OnTongNgayHocChanging(System.Nullable<int> value);
    partial void OnTongNgayHocChanged();
    #endregion
		
		public ThoiKhoaBieu()
		{
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTKB", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTKB
		{
			get
			{
				return this._IDTKB;
			}
			set
			{
				if ((this._IDTKB != value))
				{
					this.OnIDTKBChanging(value);
					this.SendPropertyChanging();
					this._IDTKB = value;
					this.SendPropertyChanged("IDTKB");
					this.OnIDTKBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMon", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenMon
		{
			get
			{
				return this._TenMon;
			}
			set
			{
				if ((this._TenMon != value))
				{
					this.OnTenMonChanging(value);
					this.SendPropertyChanging();
					this._TenMon = value;
					this.SendPropertyChanged("TenMon");
					this.OnTenMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phong", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Phong
		{
			get
			{
				return this._Phong;
			}
			set
			{
				if ((this._Phong != value))
				{
					this.OnPhongChanging(value);
					this.SendPropertyChanging();
					this._Phong = value;
					this.SendPropertyChanged("Phong");
					this.OnPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TietBD", DbType="Int NOT NULL")]
		public int TietBD
		{
			get
			{
				return this._TietBD;
			}
			set
			{
				if ((this._TietBD != value))
				{
					this.OnTietBDChanging(value);
					this.SendPropertyChanging();
					this._TietBD = value;
					this.SendPropertyChanged("TietBD");
					this.OnTietBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thu", DbType="Int NOT NULL")]
		public int Thu
		{
			get
			{
				return this._Thu;
			}
			set
			{
				if ((this._Thu != value))
				{
					this.OnThuChanging(value);
					this.SendPropertyChanging();
					this._Thu = value;
					this.SendPropertyChanged("Thu");
					this.OnThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TH", DbType="Int")]
		public System.Nullable<int> TH
		{
			get
			{
				return this._TH;
			}
			set
			{
				if ((this._TH != value))
				{
					this.OnTHChanging(value);
					this.SendPropertyChanging();
					this._TH = value;
					this.SendPropertyChanged("TH");
					this.OnTHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ST", DbType="Int NOT NULL")]
		public int ST
		{
			get
			{
				return this._ST;
			}
			set
			{
				if ((this._ST != value))
				{
					this.OnSTChanging(value);
					this.SendPropertyChanging();
					this._ST = value;
					this.SendPropertyChanged("ST");
					this.OnSTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianBD", DbType="Date")]
		public System.Nullable<System.DateTime> ThoiGianBD
		{
			get
			{
				return this._ThoiGianBD;
			}
			set
			{
				if ((this._ThoiGianBD != value))
				{
					this.OnThoiGianBDChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianBD = value;
					this.SendPropertyChanged("ThoiGianBD");
					this.OnThoiGianBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HocKy", DbType="Int NOT NULL")]
		public int HocKy
		{
			get
			{
				return this._HocKy;
			}
			set
			{
				if ((this._HocKy != value))
				{
					this.OnHocKyChanging(value);
					this.SendPropertyChanging();
					this._HocKy = value;
					this.SendPropertyChanged("HocKy");
					this.OnHocKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLM", DbType="VarChar(10)")]
		public string MaLM
		{
			get
			{
				return this._MaLM;
			}
			set
			{
				if ((this._MaLM != value))
				{
					this.OnMaLMChanging(value);
					this.SendPropertyChanging();
					this._MaLM = value;
					this.SendPropertyChanged("MaLM");
					this.OnMaLMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianKT", DbType="Date")]
		public System.Nullable<System.DateTime> ThoiGianKT
		{
			get
			{
				return this._ThoiGianKT;
			}
			set
			{
				if ((this._ThoiGianKT != value))
				{
					this.OnThoiGianKTChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianKT = value;
					this.SendPropertyChanged("ThoiGianKT");
					this.OnThoiGianKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongNgayHoc", DbType="Int")]
		public System.Nullable<int> TongNgayHoc
		{
			get
			{
				return this._TongNgayHoc;
			}
			set
			{
				if ((this._TongNgayHoc != value))
				{
					this.OnTongNgayHocChanging(value);
					this.SendPropertyChanging();
					this._TongNgayHoc = value;
					this.SendPropertyChanged("TongNgayHoc");
					this.OnTongNgayHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_ThoiKhoaBieu", Storage="_MonHoc", ThisKey="MaMon", OtherKey="MaMon", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.ThoiKhoaBieus.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.ThoiKhoaBieus.Add(this);
						this._MaMon = value.MaMon;
					}
					else
					{
						this._MaMon = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThongBao")]
	public partial class ThongBao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTB;
		
		private string _MaGV;
		
		private string _NoiDung;
		
		private System.Nullable<System.DateTime> _NgayDang;
		
		private string _MaLop;
		
		private string _MaLM;
		
		private string _MaSV;
		
		private EntityRef<GiangVien> _GiangVien;
		
		private EntityRef<LopMon> _LopMon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTBChanging(int value);
    partial void OnIDTBChanged();
    partial void OnMaGVChanging(string value);
    partial void OnMaGVChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnNgayDangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDangChanged();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnMaLMChanging(string value);
    partial void OnMaLMChanged();
    partial void OnMaSVChanging(string value);
    partial void OnMaSVChanged();
    #endregion
		
		public ThongBao()
		{
			this._GiangVien = default(EntityRef<GiangVien>);
			this._LopMon = default(EntityRef<LopMon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTB", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTB
		{
			get
			{
				return this._IDTB;
			}
			set
			{
				if ((this._IDTB != value))
				{
					this.OnIDTBChanging(value);
					this.SendPropertyChanging();
					this._IDTB = value;
					this.SendPropertyChanged("IDTB");
					this.OnIDTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GiangVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDang", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDang
		{
			get
			{
				return this._NgayDang;
			}
			set
			{
				if ((this._NgayDang != value))
				{
					this.OnNgayDangChanging(value);
					this.SendPropertyChanging();
					this._NgayDang = value;
					this.SendPropertyChanged("NgayDang");
					this.OnNgayDangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="VarChar(10)")]
		public string MaLop
		{
			get
			{
				return this._MaLop;
			}
			set
			{
				if ((this._MaLop != value))
				{
					this.OnMaLopChanging(value);
					this.SendPropertyChanging();
					this._MaLop = value;
					this.SendPropertyChanged("MaLop");
					this.OnMaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLM", DbType="VarChar(10)")]
		public string MaLM
		{
			get
			{
				return this._MaLM;
			}
			set
			{
				if ((this._MaLM != value))
				{
					if (this._LopMon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLMChanging(value);
					this.SendPropertyChanging();
					this._MaLM = value;
					this.SendPropertyChanged("MaLM");
					this.OnMaLMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSV", DbType="VarChar(50)")]
		public string MaSV
		{
			get
			{
				return this._MaSV;
			}
			set
			{
				if ((this._MaSV != value))
				{
					this.OnMaSVChanging(value);
					this.SendPropertyChanging();
					this._MaSV = value;
					this.SendPropertyChanged("MaSV");
					this.OnMaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiangVien_ThongBao", Storage="_GiangVien", ThisKey="MaGV", OtherKey="MaGV", IsForeignKey=true)]
		public GiangVien GiangVien
		{
			get
			{
				return this._GiangVien.Entity;
			}
			set
			{
				GiangVien previousValue = this._GiangVien.Entity;
				if (((previousValue != value) 
							|| (this._GiangVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiangVien.Entity = null;
						previousValue.ThongBaos.Remove(this);
					}
					this._GiangVien.Entity = value;
					if ((value != null))
					{
						value.ThongBaos.Add(this);
						this._MaGV = value.MaGV;
					}
					else
					{
						this._MaGV = default(string);
					}
					this.SendPropertyChanged("GiangVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopMon_ThongBao", Storage="_LopMon", ThisKey="MaLM", OtherKey="MaLM", IsForeignKey=true)]
		public LopMon LopMon
		{
			get
			{
				return this._LopMon.Entity;
			}
			set
			{
				LopMon previousValue = this._LopMon.Entity;
				if (((previousValue != value) 
							|| (this._LopMon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LopMon.Entity = null;
						previousValue.ThongBaos.Remove(this);
					}
					this._LopMon.Entity = value;
					if ((value != null))
					{
						value.ThongBaos.Add(this);
						this._MaLM = value.MaLM;
					}
					else
					{
						this._MaLM = default(string);
					}
					this.SendPropertyChanged("LopMon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
